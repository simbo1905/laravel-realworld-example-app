{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "laravel-template",
    "annotations": {
      "openshift.io/display-name": "laravel",
      "description": "An example PHP LaraVel application.",
      "tags": "quickstart,php",
      "iconClass": "icon-php",
      "openshift.io/long-description": "This template defines resources needed to develop a dotnet application, including a build configuration, application deployment configuration, and database deployment configuration.",
      "openshift.io/provider-display-name": "Department for Education",
      "openshift.io/documentation-url": "https://github.com/openshift/rails-ex",
      "openshift.io/support-url": "https://access.redhat.com",
      "template.openshift.io/bindable": "false"
    }
  },
  "message": "The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/openshift/rails-ex/blob/master/README.md.",
  "labels": {
      "template": "laravel",
      "app": "laravel"
  },
  "objects": [
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Exposes and load balances the application pods",
          "service.alpha.openshift.io/dependencies": "[{\"name\": \"${DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "web",
            "port": 8000,
            "targetPort": 8000
          }
        ],
        "selector": {
          "name": "${NAME}"
        }
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}"
      },
      "spec": {
        "host": "${APPLICATION_DOMAIN}",
        "to": {
          "kind": "Service",
          "name": "${NAME}"
        }
      }
    },
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Keeps track of changes in the application image"
        }
      }
    },
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "s2i-nginx-php72",
        "annotations": {
          "openshift.io/display-name": "s2i-nginx-php72"
        }
      },
      "spec": {
        "tags": [
          {
            "name": "latest",
            "annotations": {
              "openshift.io/display-name": "S2i nginx php72 (Latest)",
              "openshift.io/provider-display-name": "Consensus Solutions Ltd",
              "description": "s2i for nginx and php",
              "iconClass": "icon-php",
              "tags": "builder,php",
              "supports":"php",
              "sampleRepo": "https://github.com/openshift/php-ex.git"
            },
            "from": {
              "kind": "ImageStreamTag",
              "name": "7.1"
            }
          },
          {
            "name": "7.1",
            "annotations": {
              "openshift.io/display-name": "Apache HTTP Server 2.4",
              "openshift.io/provider-display-name": "Consensus Solutions Ltd",
              "description": "s2i for nginx and php",
              "iconClass": "icon-php",
              "tags": "builder,php",
              "supports":"php",
              "version": "7.1",
              "sampleRepo": "https://github.com/openshift/php-ex.git"
            },
            "from": {
              "kind": "DockerImage",
              "name": "docker.io/uniqkey/s2i-nginx-php72:latest"
            }
          }
        ]
      }
    },
    {
      "kind": "BuildConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Defines how to build the application",
          "template.alpha.openshift.io/wait-for-ready": "true"
        }
      },
      "spec": {
        "source": {
          "type": "Git",
          "git": {
            "uri": "${SOURCE_REPOSITORY_URL}",
            "ref": "${SOURCE_REPOSITORY_REF}"
          },
          "contextDir": "${CONTEXT_DIR}"
        },
        "strategy": {
          "type": "Source",
          "sourceStrategy": {
            "from": {
              "kind": "ImageStreamTag",
              "name": "s2i-nginx-php72:latest"
            },
            "incremental" : true,
            "env": [
                {
                    "name": "APP_KEY",
                    "value": "base64:ITwGcroK1wzkOuJJbgmqPKtbV6pYLTp8h8JHP/W5k34="
                }
            ]
          }
        },
        "output": {
          "to": {
            "kind": "ImageStreamTag",
            "name": "${NAME}:latest"
          }
        },
        "triggers": [
          {
            "type": "ImageChange"
          },
          {
            "type": "ConfigChange"
          },
          {
            "type": "GitHub",
            "github": {
              "secret": "${GITHUB_WEBHOOK_SECRET}"
            }
          }
        ]
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Defines how to deploy the application server",
          "template.alpha.openshift.io/wait-for-ready": "true"
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${NAME}:latest"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${NAME}"
        },
        "template": {
          "metadata": {
            "name": "${NAME}",
            "labels": {
              "name": "${NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "${NAME}",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 8000
                  }
                ],
                "envFrom": [
                  {
                      "secretRef": {
                          "name": "${NAME}"
                      }
                  }
                ],
                "env": [
                    {
                        "name": "REDIS_HOST",
                        "value": "${REDIS_SERVICE_NAME}.${NAMESPACE}.svc"
                    }
                ],                
                "resources": {
                  "limits": {
                    "memory": "${MEMORY_LIMIT}"
                  }
                },
                "livenessProbe": {
                  "httpGet": {
                    "path": "/api/hello",
                    "port": 8000,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "timeoutSeconds": 3,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "readinessProbe": {
                  "httpGet": {
                    "path": "/api/ready",
                    "port": 8000,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "timeoutSeconds": 3,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                }
              }
            ]
          }
        }
      }
    }
  ],
  "parameters": [
    {
      "name": "NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the frontend objects defined in this template.",
      "required": true
    },
    {
      "name": "NAMESPACE",
      "displayName": "Namespace",
      "required": true,
      "description": "The OpenShift Namespace / Project."
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "Memory Limit",
      "required": true,
      "description": "Maximum amount of memory the WEB container can use.",
      "value": "512Mi"
    },
    {
      "name": "SOURCE_REPOSITORY_URL",
      "displayName": "Git Repository URL",
      "required": true,
      "description": "The URL of the repository with your application source code.",
      "value": "git@github.com:UniqKey/backend-app.git"
    },
    {
      "name": "SOURCE_REPOSITORY_REF",
      "displayName": "Git Reference",
      "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch.",
      "required": true
    },
    {
      "name": "CONTEXT_DIR",
      "displayName": "Context Directory",
      "description": "Set this to the relative path to your project if it is not in the root of your repository."
    },
    {
      "name": "APPLICATION_DOMAIN",
      "displayName": "Application Hostname",
      "description": "The exposed hostname that will route to the web service, if left blank a value will be defaulted.",
      "value": ""
    },
    {
      "name": "GITHUB_WEBHOOK_SECRET",
      "displayName": "GitHub Webhook Secret",
      "description": "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{40}"
    },
    {
      "name": "REDIS_SERVICE_NAME",
      "displayName": "Redis Service Name",
      "description": "The Redis Service Name that will be used to generate name.project.svc openshift internal DNS name.",
      "value": "redis-32-rhel7"
    }
  ]
}